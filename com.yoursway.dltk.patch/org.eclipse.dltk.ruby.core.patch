Index: src/org/eclipse/dltk/ruby/internal/core/codeassist/RubyCompletionEngine.java
===================================================================
RCS file: /cvsroot/technology/org.eclipse.dltk/ruby/plugins/org.eclipse.dltk.ruby.core/src/org/eclipse/dltk/ruby/internal/core/codeassist/RubyCompletionEngine.java,v
retrieving revision 1.68
diff -u -r1.68 RubyCompletionEngine.java
--- src/org/eclipse/dltk/ruby/internal/core/codeassist/RubyCompletionEngine.java	14 Jun 2007 12:13:03 -0000	1.68
+++ src/org/eclipse/dltk/ruby/internal/core/codeassist/RubyCompletionEngine.java	16 Jun 2007 23:11:56 -0000
@@ -219,12 +219,12 @@
 
 	public void complete(ISourceModule module, int position, int i) {
 		this.currentModule = module;
-		if (Job.getJobManager().find(ResourcesPlugin.FAMILY_AUTO_BUILD).length > 0) {
-			this.requestor.completionFailure(new DefaultProblem(null,
-					"Please wait until building is ready...", 0, null,
-					IStatus.WARNING, startPosition, endPosition, -1));
-			return;
-		}
+//		if (Job.getJobManager().find(ResourcesPlugin.FAMILY_AUTO_BUILD).length > 0) {
+//			this.requestor.completionFailure(new DefaultProblem(null,
+//					"Please wait until building is ready...", 0, null,
+//					IStatus.WARNING, startPosition, endPosition, -1));
+//			return;
+//		}
 		if (!RubyPlugin.initialized) {
 			this.requestor.completionFailure(new DefaultProblem(null,
 					"Please wait while DLTK Ruby being initialized...", 0,
Index: src/org/eclipse/dltk/ruby/typeinference/RubyModelUtils.java
===================================================================
RCS file: /cvsroot/technology/org.eclipse.dltk/ruby/plugins/org.eclipse.dltk.ruby.core/src/org/eclipse/dltk/ruby/typeinference/RubyModelUtils.java,v
retrieving revision 1.32
diff -u -r1.32 RubyModelUtils.java
--- src/org/eclipse/dltk/ruby/typeinference/RubyModelUtils.java	15 Jun 2007 08:34:44 -0000	1.32
+++ src/org/eclipse/dltk/ruby/typeinference/RubyModelUtils.java	16 Jun 2007 23:11:56 -0000
@@ -276,11 +276,11 @@
 					}
 				}
 				return result;
-			}
+	}
 		}
 		return null;
 	}
-	
+
 	public static List getAllSourceMethods(RubyMixinMethod[] methods, RubyMixinClass selfKlass) {
 		List result = new ArrayList ();
 		for (int i = 0; i < methods.length; i++) {
@@ -309,6 +309,7 @@
 			String prefix) {
 		List result = new ArrayList();
 		if (type instanceof RubyClassType) {
+		    System.out.println("SEARCH CLASS METHODS for " + ((RubyClassType) type).getModelKey());
 			RubyClassType rubyClassType = (RubyClassType) type;
 			RubyMixinClass rubyClass = RubyMixinModel.getInstance()
 					.createRubyClass(rubyClassType);
